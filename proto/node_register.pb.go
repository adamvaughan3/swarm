// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/node_register.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ListenPort    int32                  `protobuf:"varint,2,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	HandshakeId   string                 `protobuf:"bytes,3,opt,name=handshake_id,json=handshakeId,proto3" json:"handshake_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_proto_node_register_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_node_register_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_proto_node_register_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegisterRequest) GetListenPort() int32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *RegisterRequest) GetHandshakeId() string {
	if x != nil {
		return x.HandshakeId
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_proto_node_register_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_node_register_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_proto_node_register_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ListenPort    int32                  `protobuf:"varint,2,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	HandshakeId   string                 `protobuf:"bytes,3,opt,name=handshake_id,json=handshakeId,proto3" json:"handshake_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckRequest) Reset() {
	*x = AckRequest{}
	mi := &file_proto_node_register_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckRequest) ProtoMessage() {}

func (x *AckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_node_register_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckRequest.ProtoReflect.Descriptor instead.
func (*AckRequest) Descriptor() ([]byte, []int) {
	return file_proto_node_register_proto_rawDescGZIP(), []int{2}
}

func (x *AckRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AckRequest) GetListenPort() int32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *AckRequest) GetHandshakeId() string {
	if x != nil {
		return x.HandshakeId
	}
	return ""
}

type AckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckResponse) Reset() {
	*x = AckResponse{}
	mi := &file_proto_node_register_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckResponse) ProtoMessage() {}

func (x *AckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_node_register_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckResponse.ProtoReflect.Descriptor instead.
func (*AckResponse) Descriptor() ([]byte, []int) {
	return file_proto_node_register_proto_rawDescGZIP(), []int{3}
}

func (x *AckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_node_register_proto protoreflect.FileDescriptor

const file_proto_node_register_proto_rawDesc = "" +
	"\n" +
	"\x19proto/node_register.proto\x12\x05swarm\"e\n" +
	"\x0fRegisterRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vlisten_port\x18\x02 \x01(\x05R\n" +
	"listenPort\x12!\n" +
	"\fhandshake_id\x18\x03 \x01(\tR\vhandshakeId\",\n" +
	"\x10RegisterResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"`\n" +
	"\n" +
	"AckRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vlisten_port\x18\x02 \x01(\x05R\n" +
	"listenPort\x12!\n" +
	"\fhandshake_id\x18\x03 \x01(\tR\vhandshakeId\"'\n" +
	"\vAckResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2u\n" +
	"\bRegister\x12;\n" +
	"\bRegister\x12\x16.swarm.RegisterRequest\x1a\x17.swarm.RegisterResponse\x12,\n" +
	"\x03Ack\x12\x11.swarm.AckRequest\x1a\x12.swarm.AckResponseB\tZ\a./protob\x06proto3"

var (
	file_proto_node_register_proto_rawDescOnce sync.Once
	file_proto_node_register_proto_rawDescData []byte
)

func file_proto_node_register_proto_rawDescGZIP() []byte {
	file_proto_node_register_proto_rawDescOnce.Do(func() {
		file_proto_node_register_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_node_register_proto_rawDesc), len(file_proto_node_register_proto_rawDesc)))
	})
	return file_proto_node_register_proto_rawDescData
}

var file_proto_node_register_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_node_register_proto_goTypes = []any{
	(*RegisterRequest)(nil),  // 0: swarm.RegisterRequest
	(*RegisterResponse)(nil), // 1: swarm.RegisterResponse
	(*AckRequest)(nil),       // 2: swarm.AckRequest
	(*AckResponse)(nil),      // 3: swarm.AckResponse
}
var file_proto_node_register_proto_depIdxs = []int32{
	0, // 0: swarm.Register.Register:input_type -> swarm.RegisterRequest
	2, // 1: swarm.Register.Ack:input_type -> swarm.AckRequest
	1, // 2: swarm.Register.Register:output_type -> swarm.RegisterResponse
	3, // 3: swarm.Register.Ack:output_type -> swarm.AckResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_node_register_proto_init() }
func file_proto_node_register_proto_init() {
	if File_proto_node_register_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_node_register_proto_rawDesc), len(file_proto_node_register_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_node_register_proto_goTypes,
		DependencyIndexes: file_proto_node_register_proto_depIdxs,
		MessageInfos:      file_proto_node_register_proto_msgTypes,
	}.Build()
	File_proto_node_register_proto = out.File
	file_proto_node_register_proto_goTypes = nil
	file_proto_node_register_proto_depIdxs = nil
}
